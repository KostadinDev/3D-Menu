{"version":3,"sources":["images/item-images/kalua-pig.png","images/item-images/laulau.png","images/item-images/poke.png","components/card/item.component.jsx","components/card-list/item-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js","images/item-images/loco-moco.jpg"],"names":["module","exports","Item","props","className","item","name","alt","src","image","style","width","height","onClick","alert","description","ItemList","items","map","key","id","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","title","onSearchChange","event","state","Description","LocoMoco","KaluaPig","LauLau","Poke","this","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a28cec64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kalua-pig.62fcfd9d.png\";","module.exports = __webpack_public_path__ + \"static/media/laulau.57d33c87.png\";","module.exports = __webpack_public_path__ + \"static/media/poke.972e6741.png\";","import React from 'react';\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Item = (props) => (\r\n    <div className='card-container'>\r\n        <h2>\r\n            {props.item.name}\r\n        </h2>\r\n        <p>\r\n            <img alt={props.item.alt} src={props.item.image} style={{width: '160px', height: '160px'}} onClick={() => alert('hello')} />\r\n            {props.item.description}\r\n        </p>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Item} from \"../card/item.component\";\r\n\r\n\r\nexport const ItemList = props => {\r\n\r\n\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.items.map(item => (\r\n                    <Item item={item} key={item.id} onClick={() => alert('hello')}/>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport './search-box.styles.css'\r\nimport { MDBCol } from \"mdbreact\";\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className ='search'\r\n           onChange= {handleChange}\r\n           type='search'\r\n           placeholder={placeholder}\r\n    />\r\n);\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {ItemList} from './components/card-list/item-list.component';\nimport './App.css';\nimport {SearchBox} from './components/search-box/search-box.component'\nimport LocoMoco from \"./images/item-images/loco-moco.jpg\";\nimport KaluaPig from \"./images/item-images/kalua-pig.png\";\nimport LauLau from \"./images/item-images/laulau.png\";\nimport Poke from \"./images/item-images/poke.png\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchField: '',\n            items: [{name: \"Loco Moco\", Description: \"\", image: LocoMoco, alt: \"Loco Moco\", id: 0},\n                {name: \"Kalua Pig\", Description: \"\", image: KaluaPig, alt: \"Kalua Pig\", id: 1},\n                {name: \"Lau Lau\", Description: \"\", image: LauLau, alt: \"Laulau\", id: 2},\n                {name: \"Poke\", Description: \"\", image: Poke, alt: \"Poke\", id: 3},\n                {name: \"Loco Moco\", Description: \"\", image: LocoMoco, alt: \"Loco Moco\", id: 4},\n                {name: \"Kalua Pig\", Description: \"\", image: KaluaPig, alt: \"Kalua Pig\", id: 5},\n                {name: \"Lau Lau\", Description: \"\", image: LauLau, alt: \"Laulau\", id: 6},\n                {name: \"Poke\", Description: \"\", image: Poke, alt: \"Poke\", id: 7},\n                {name: \"Loco Moco\", Description: \"\", image: LocoMoco, alt: \"Loco Moco\", id: 8},\n                {name: \"Kalua Pig\", Description: \"\", image: KaluaPig, alt: \"Kalua Pig\", id: 9},\n                {name: \"Lau Lau\", Description: \"\", image: LauLau, alt: \"Laulau\", id: 10},\n                {name: \"Poke\", Description: \"\", image: Poke, alt: \"Poke\", id: 11},\n                {name: \"Loco Moco\", Description: \"\", image: LocoMoco, alt: \"Loco Moco\", id: 12},\n                {name: \"Kalua Pig\", Description: \"\", image: KaluaPig, alt: \"Kalua Pig\", id: 13},\n                {name: \"Lau Lau\", Description: \"\", image: LauLau, alt: \"Laulau\", id: 14},\n                {name: \"Poke\", Description: \"\", image: Poke, alt: \"Poke\", id: 15}],\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({searchField: e.target.value, title: e.target.value})\n    };\n\n    componentDidMount() {\n    }\n\n    onSearchChange = event => {\n        this.setState({searchField: event.target.value});\n    };\n\n    render() {\n        const {searchField, items} = this.state;\n        const filteredItems = items.filter(item => item.name.toLowerCase().includes(searchField.toLowerCase()));\n\n        return (\n            <div className=\"App\">\n                <h1> Campus Center Dining </h1>\n                <SearchBox onSearchChange={this.onSearchChange} handleChange={this.handleChange}\n                           placeholder='search items'/>\n                <ItemList items={items}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loco-moco.2d8c1510.jpg\";"],"sourceRoot":""}